{"ast":null,"code":"var _jsxFileName = \"/Users/jacob_lever/assignment-07-lotion-plus-jacob-and-edward/src/components/EditContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport moment from 'moment';\nimport { currentDate } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditContent(_ref) {\n  _s();\n  let {\n    notes,\n    setNotes,\n    formatDate\n  } = _ref;\n  const {\n    noteId\n  } = useParams();\n  const currentNote = notes.find(note => note.id === noteId);\n  const navigate = useNavigate();\n  const deleteNotes = () => {\n    const answer = window.confirm(\"Are you sure?\");\n    if (answer) {\n      setNotes(notes.filter(note => note.id !== noteId));\n      navigate(\"/notes\");\n    }\n  };\n  let date = new Date();\n  console.log(currentNote.date);\n  const [editedTitle, setEditedTitle] = useState(currentNote.title);\n  const [editedContent, setEditedContent] = useState(currentNote.content);\n  const [editedDate, setEditedDate] = useState(currentNote.date ? currentNote.date.parse() : moment(date).format(\"YYYY-MM-DDTkk:mm\"));\n  const handleEditTitle = event => {\n    setEditedTitle(event.target.value);\n  };\n  const handleSave = () => {\n    const editedNotes = notes.map(note => {\n      if (note.id === noteId) {\n        return {\n          ...note,\n          title: `${editedTitle !== \"\" ? editedTitle : \"Untitled\"}`,\n          content: editedContent,\n          date: formatDate(editedDate) //remove format date \n        };\n      } else {\n        return note;\n      }\n    });\n    setNotes([...editedNotes]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-top-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-top-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"content-top-textbox\",\n          value: editedTitle,\n          onChange: handleEditTitle,\n          maxLength: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"content-date\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            className: \"input my-2\",\n            value: editedDate,\n            onChange: e => setEditedDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-top-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/notes/${noteId}`,\n          onClick: handleSave,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-button\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-button\",\n          onClick: deleteNotes,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      theme: \"snow\",\n      value: editedContent,\n      onChange: setEditedContent,\n      className: \"editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(EditContent, \"CoEgZ8Kf/Xu+ETnn0AXY1npeld4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditContent;\nexport default EditContent;\nvar _c;\n$RefreshReg$(_c, \"EditContent\");","map":{"version":3,"names":["React","useState","useParams","Link","useNavigate","ReactQuill","moment","currentDate","jsxDEV","_jsxDEV","EditContent","_ref","_s","notes","setNotes","formatDate","noteId","currentNote","find","note","id","navigate","deleteNotes","answer","window","confirm","filter","date","Date","console","log","editedTitle","setEditedTitle","title","editedContent","setEditedContent","content","editedDate","setEditedDate","parse","format","handleEditTitle","event","target","value","handleSave","editedNotes","map","className","children","type","onChange","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","e","to","onClick","theme","_c","$RefreshReg$"],"sources":["/Users/jacob_lever/assignment-07-lotion-plus-jacob-and-edward/src/components/EditContent.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport moment from 'moment';\nimport { currentDate } from \"./utils\";\n\nfunction EditContent({ notes, setNotes, formatDate }) {\n    const { noteId } = useParams();\n    const currentNote = notes.find((note) => note.id === noteId);\n\n    const navigate = useNavigate();\n\n    const deleteNotes = () => {\n        const answer = window.confirm(\"Are you sure?\");\n        if (answer) {\n            setNotes(notes.filter((note) => note.id !== noteId))\n            navigate(\"/notes\");\n        }\n        \n    }\n    \n    let date = new Date();\n\n    console.log(currentNote.date)\n    const [ editedTitle, setEditedTitle ] = useState(currentNote.title);\n    const [ editedContent, setEditedContent] = useState(currentNote.content);\n    const [ editedDate, setEditedDate] = useState(currentNote.date ? currentNote.date.parse() : moment(date).format(\"YYYY-MM-DDTkk:mm\"));\n\n    const handleEditTitle = (event) => {\n        setEditedTitle(event.target.value);\n    }\n\n    const handleSave = () => {\n        const editedNotes = notes.map((note) => {\n            if (note.id === noteId)\n            {\n                return (\n                    {\n                        ...note,\n                        title: `${editedTitle!== \"\" ? editedTitle : \"Untitled\"}`,\n                        content: editedContent,\n                        date: formatDate(editedDate), //remove format date \n                    }\n                )\n            }\n            else{return note;}\n            \n        });\n\n        setNotes([...editedNotes]);\n    }\n    return (\n    <div className=\"content-container\">\n        <div className=\"content-top-container\">\n            <div className=\"content-top-title-container\">\n                <input type = \"text\" className = \"content-top-textbox\" value = { editedTitle } onChange={ handleEditTitle }\n                maxLength= \"50\" />\n                <small className=\"content-date\">\n                    <input \n                        type=\"datetime-local\" \n                        className=\"input my-2\"\n                        value={ editedDate }\n                        onChange={(e) => setEditedDate(e.target.value)}\n                    />\n                </small>\n            </div>\n            <div className = \"content-top-button-container\">\n                <Link to={`/notes/${noteId}`} onClick={handleSave}>\n                    <div className = \"content-button\">Save</div>\n                </Link>\n                <div className = \"content-button\" onClick={deleteNotes}>Delete</div>\n            </div>\n        </div>\n        <ReactQuill theme=\"snow\" value = { editedContent } onChange = { setEditedContent } className=\"editor\"/>\n    </div>\n    );\n}\n\nexport default EditContent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}