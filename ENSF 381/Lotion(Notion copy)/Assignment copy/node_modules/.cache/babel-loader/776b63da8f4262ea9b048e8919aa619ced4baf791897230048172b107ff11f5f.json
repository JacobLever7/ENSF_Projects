{"ast":null,"code":"var _jsxFileName = \"/Users/jacob_lever/assignment-07-lotion-plus-jacob-and-edward/src/App.js\",\n  _s = $RefreshSig$();\n//import dependancies here\nimport ReactQuill from \"react-quill\";\nimport React, { useState, useEffect } from \"react\";\nimport \"bulma/css/bulma.css\";\nimport 'react-quill/dist/quill.snow.css';\nimport { googleLogout, useGoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\n\n/*App.js*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState([]);\n  const [profile, setProfile] = useState([]);\n  const login = useGoogleLogin({\n    onSuccess: codeResponse => setUser(codeResponse),\n    onError: error => console.log('Login Failed:', error)\n  });\n  useEffect(() => {\n    if (user) {\n      axios.get(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\n        headers: {\n          Authorization: `Bearer ${user.access_token}`,\n          Accept: 'application/json'\n        }\n      }).then(res => {\n        setProfile(res.data);\n      }).catch(err => console.log(err));\n    }\n  }, [user]);\n\n  // log out function to log the user out of google and set the profile array to null\n  const logOut = () => {\n    googleLogout();\n    setProfile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"React Google Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), profile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.picture,\n        alt: \"user image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", profile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email Address: \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logOut,\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => login(),\n      children: \"Sign in with Google \\uD83D\\uDE80 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"0s7KvL4ir8lIOhwDn3gcsbIk4iM=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\n{/* \n function App() {\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  \n  const [ user, setUser ] = useState([]);\n  const [ profile, setProfile ] = useState([]);\n   const onSaveNote = () => {\n    setNotes([{ title, body, date }, ...notes]);\n    //more code here\n  }\n   //google functions\n  const login = useGoogleLogin({\n    onSuccess: (codeResponse) => setUser(codeResponse),\n    onError: (error) => console.log('Login Failed:', error)\n  });\n   useEffect(\n    () => {\n        if (user) {\n            axios\n                .get(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\n                    headers: {\n                        Authorization: `Bearer ${user.access_token}`,\n                        Accept: 'application/json'\n                    }\n                })\n                .then((res) => {\n                    setProfile(res.data);\n                })\n                .catch((err) => console.log(err));\n        }\n    },\n    [ user ]\n  );\n // log out function to log the user out of google and set the profile array to null\n const logOut = () => {\n    googleLogout();\n    setProfile(null);\n };\n \n  return (\n    <div className=\"container\">\n      <div className=\"columns m-4\">\n        <div className=\"columns is-flex is-flex-direction-column ...more classes here...\">          \n          {profile ? (\n            //notes application page\n            <>\n              <div>\n                <img src={profile.picture} alt=\"user image\" />\n                <h3>User Logged in</h3>\n                <p>Name: {profile.name}</p>\n                <p>Email Address: {profile.email}</p>\n                <br />\n                <br />\n                <button onClick={logOut}>Log out</button>\n              </div>\n \n              <h2 className=\"subtitle\">Welcome, {profile.name}</h2>\n              <input \n                className=\"input\" \n                type=\"text\" \n                placeholder=\"Note Title\" \n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n              <ReactQuill \n                placeholder=\"Note Body\"\n                value={body}\n                onChange={(e) => setBody(e.target.value)}\n                //ERRORS HERE ^^\n              />\n              <input \n                type=\"datetime-local\" \n                className=\"input my-2\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              />\n              <button className=\"button is-success\" onClick={onSaveNote}>Save Note</button>\n            </>\n           ) : (\n            //login page\n            <>\n               <button className=\"button\" onClick={() => login()}>Sign in with Google ðŸš€ </button>\n              \n               {/* Placeholder content:\n                <h2 className=\"title\">Login</h2>\n                <form onSubmit={(e) => onFormSubmit(e)}>\n                  <input \n                    className=\"input my-2\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                  />\n                  <input \n                    type=\"submit\"\n                    className=\"button is-info\"\n                    value=\"Login\"\n                  />\n                </form>\n              **}\n            </>\n          )}\n          \n        </div>\n      </div>\n     </div>\n   );\n }\n export default App;\n */}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ReactQuill","React","useState","useEffect","googleLogout","useGoogleLogin","axios","jsxDEV","_jsxDEV","App","_s","user","setUser","profile","setProfile","login","onSuccess","codeResponse","onError","error","console","log","get","access_token","headers","Authorization","Accept","then","res","data","catch","err","logOut","children","fileName","_jsxFileName","lineNumber","columnNumber","src","picture","alt","name","email","onClick","_c","$RefreshReg$"],"sources":["/Users/jacob_lever/assignment-07-lotion-plus-jacob-and-edward/src/App.js"],"sourcesContent":["//import dependancies here\nimport ReactQuill from \"react-quill\";\nimport React, { useState, useEffect } from \"react\";\nimport \"bulma/css/bulma.css\"\nimport 'react-quill/dist/quill.snow.css';\nimport { googleLogout, useGoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\n\n\n/*App.js*/\n\n\nfunction App() {\n    const [ user, setUser ] = useState([]);\n    const [ profile, setProfile ] = useState([]);\n\n    const login = useGoogleLogin({\n        onSuccess: (codeResponse) => setUser(codeResponse),\n        onError: (error) => console.log('Login Failed:', error)\n    });\n\n    useEffect(\n        () => {\n            if (user) {\n                axios\n                    .get(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\n                        headers: {\n                            Authorization: `Bearer ${user.access_token}`,\n                            Accept: 'application/json'\n                        }\n                    })\n                    .then((res) => {\n                        setProfile(res.data);\n                    })\n                    .catch((err) => console.log(err));\n            }\n        },\n        [ user ]\n    );\n\n    // log out function to log the user out of google and set the profile array to null\n    const logOut = () => {\n        googleLogout();\n        setProfile(null);\n    };\n\n    return (\n        <div>\n            <h2>React Google Login</h2>\n            <br />\n            <br />\n            {profile ? (\n                <div>\n                    <img src={profile.picture} alt=\"user image\" />\n                    <h3>User Logged in</h3>\n                    <p>Name: {profile.name}</p>\n                    <p>Email Address: {profile.email}</p>\n                    <br />\n                    <br />\n                    <button onClick={logOut}>Log out</button>\n                </div>\n            ) : (\n                <button onClick={() => login()}>Sign in with Google ðŸš€ </button>\n            )}\n        </div>\n    );\n}\nexport default App;\n\n{/* \nfunction App() {\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  \n  const [ user, setUser ] = useState([]);\n  const [ profile, setProfile ] = useState([]);\n\n  const onSaveNote = () => {\n    setNotes([{ title, body, date }, ...notes]);\n    //more code here\n  }\n\n  //google functions\n  const login = useGoogleLogin({\n    onSuccess: (codeResponse) => setUser(codeResponse),\n    onError: (error) => console.log('Login Failed:', error)\n  });\n\n  useEffect(\n    () => {\n        if (user) {\n            axios\n                .get(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\n                    headers: {\n                        Authorization: `Bearer ${user.access_token}`,\n                        Accept: 'application/json'\n                    }\n                })\n                .then((res) => {\n                    setProfile(res.data);\n                })\n                .catch((err) => console.log(err));\n        }\n    },\n    [ user ]\n  );\n\n// log out function to log the user out of google and set the profile array to null\nconst logOut = () => {\n    googleLogout();\n    setProfile(null);\n};\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"columns m-4\">\n        <div className=\"columns is-flex is-flex-direction-column ...more classes here...\">          \n          {profile ? (\n            //notes application page\n            <>\n              <div>\n                <img src={profile.picture} alt=\"user image\" />\n                <h3>User Logged in</h3>\n                <p>Name: {profile.name}</p>\n                <p>Email Address: {profile.email}</p>\n                <br />\n                <br />\n                <button onClick={logOut}>Log out</button>\n              </div>\n\n\n              <h2 className=\"subtitle\">Welcome, {profile.name}</h2>\n              <input \n                className=\"input\" \n                type=\"text\" \n                placeholder=\"Note Title\" \n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n              <ReactQuill \n                placeholder=\"Note Body\"\n                value={body}\n                onChange={(e) => setBody(e.target.value)}\n                //ERRORS HERE ^^\n              />\n              <input \n                type=\"datetime-local\" \n                className=\"input my-2\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              />\n              <button className=\"button is-success\" onClick={onSaveNote}>Save Note</button>\n            </>\n\n          ) : (\n            //login page\n            <>\n\n              <button className=\"button\" onClick={() => login()}>Sign in with Google ðŸš€ </button>\n              \n\n              {/* Placeholder content:\n                <h2 className=\"title\">Login</h2>\n                <form onSubmit={(e) => onFormSubmit(e)}>\n                  <input \n                    className=\"input my-2\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                  />\n                  <input \n                    type=\"submit\"\n                    className=\"button is-info\"\n                    value=\"Login\"\n                  />\n                </form>\n              **}\n            </>\n          )}\n          \n        </div>\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n\n*/}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}